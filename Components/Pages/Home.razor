@page "/"
@using Azure;
@using Azure.AI.Vision.ImageAnalysis;
@using System;
@rendermode InteractiveServer
<PageTitle>Home</PageTitle>

<h1>Computer Vision</h1>

<p>Insert url or type prompt.</p>
<textarea @bind="url" rows="1" cols="50" placeholder="Enter url to analyze or prompt to generate image"></textarea>
<br>
<button @onclick="AnalyzeImage">Analyze Image</button>
<button @onclick="GenerateImage">Generate Image</button>

@inject IConfiguration Configuration
@code
{

    string url = "";
    void AnalyzeImage()
    {
        var endpoint = Configuration["Vision:endpoint"];
        var key = Configuration["Vision:key"];

       ImageAnalysisClient client = new ImageAnalysisClient(
            new Uri(endpoint),
            new AzureKeyCredential(key));

        ImageAnalysisResult result = client.Analyze(
            new Uri("https://learn.microsoft.com/azure/ai-services/computer-vision/media/quickstarts/presentation.png"), 
            VisualFeatures.Caption | VisualFeatures.Read, 
            new ImageAnalysisOptions { GenderNeutralCaption = true});

        Console.WriteLine("Image analysis results:");
        Console.WriteLine(" Caption:");
        Console.WriteLine($"    '{result.Caption.Text}', Confidence {result.Caption.Confidence:F4}");

        Console.WriteLine(" Read:");
        foreach (DetectedTextBlock block in result.Read.Blocks)
            foreach (DetectedTextLine line in block.Lines)
            {
                Console.WriteLine($"    Line: '{line.Text}', Bounding Polygon: [{string.Join(" ", line.BoundingPolygon)}]");
                foreach (DetectedTextWord word in line.Words)
                {
                    Console.WriteLine($"    Word: '{word.Text}', Confidence {word.Confidence.ToString("#.####")}, Bounding Polygon: [{string.Join(" ", word.BoundingPolygon)}]");
                }
            }
    }

    void GenerateImage()
    {

    }
}